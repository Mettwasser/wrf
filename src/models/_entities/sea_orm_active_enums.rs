//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.3

use sea_orm::entity::prelude::*;
use serde::{
    Deserialize,
    Serialize,
};

#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum, Serialize, Deserialize)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "regions")]
pub enum Region {
    #[sea_orm(string_value = "AS")]
    AS,
    #[sea_orm(string_value = "EER")]
    EER,
    #[sea_orm(string_value = "EU")]
    EU,
    #[sea_orm(string_value = "NA")]
    NA,
    #[sea_orm(string_value = "OC")]
    OC,
    #[sea_orm(string_value = "SA")]
    SA,
}
#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum, Serialize, Deserialize)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "relic_refinement")]
pub enum RelicRefinement {
    #[sea_orm(string_value = "Intact")]
    Intact,
    #[sea_orm(string_value = "Exceptional")]
    Exceptional,
    #[sea_orm(string_value = "Flawless")]
    Flawless,
    #[sea_orm(string_value = "Radiant")]
    Radiant,
}
